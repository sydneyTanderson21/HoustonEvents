version: "2" # docker compose version

services:
  frontend:
    container_name: houstonevents-frontend
    image: houstonevents-frontend-image
    restart: unless-stopped # What to do if container crashes
    build: # path to dockerfile
        context: ./frontend
        dockerfile: Dockerfile
    ports: # binds local port to container port 
        - 80:80 # hosting port : container port 
#   nginx: 
#     restart: unless-stopped
#     build:
#         context: ./frontend
#         dockerfile: Dockerfile
#     ports:
#         - 80:80
#     volumes:
#         - static_volume:/backend/backend/server/static
#         - ./frontend/nginx/dev:/etc/nginx/conf.d
#     depends_on: 
#         - backend
  backend:
    container_name: houstonevents-backend
    image: houstonevents-backend-image
    restart: on-failure
    build: #current direcotry, backend folder
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://user:pass@postgres:5432/db
      NODE_ENV: development
      PORT: 5000
    command: npm start
    ports:
      - 5000:5000 
    depends_on:
      - postgres  
    #volumes:
      #- .:/app/
      #- ./app:/app
      #- ./:/app
      #- /app/node_modules
    #  - ./app:/app

  postgres:
    image: postgres:14
    ports: #mapping port 5432 of the container to our localhost port 35432 
      - "35432:5432"
    volumes: #using volumes so that our DB data does not erase when we shut down the container
      - data:/data/db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db   

volumes: 
  data: {}
  